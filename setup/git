#!/bin/bash
#
# SPDX-License-Identifier: GPL-3.0-or-later
#
# Copyright (C) 2017-2020 Nathan Chancellor
# Copyright (C) 2020 Saurabh Charde <saurabhchardereal@gmail.com>
#
# git functions

# Check if my GPG key can be used
function gpg_key_usable() {
    command -v gpg &>/dev/null || return 1
    gpg --list-secret-keys --keyid-format LONG | grep -q 5B8A4DC9B94B1C64599A961F5CACE763EF81E4D1
}

# Initial git config setup
function git_setup() { (
    git config --global user.name "Saurabh Charde"
    git config --global user.email "saurabhchardereal@gmail.com"
    git config --global credential.helper 'cache --timeout=3600'
    git config --global pull.rebase false

    if ! gpg_key_usable; then
        git clone https://github.com/saurabhchardereal/keys "${HOME}"/.keys
        gpg --import "${HOME}"/.keys/{private,public}-key.gpg
        # shellcheck disable=SC2016
        [[ -n $BASH ]] && printf 'export GPG_TTY=$(tty)\n' >>"${HOME}"/.bashrc
        rm -rf "${HOME}"/.keys
    fi

    if type -f gpg_key_usable &>/dev/null && gpg_key_usable; then
        printf 'default-cache-ttl 604800\nmax-cache-ttl 2419200\n' >"${HOME}"/.gnupg/gpg-agent.conf
        git config --global commit.gpgsign true
        git config --global user.signkey 5B8A4DC9B94B1C64599A961F5CACE763EF81E4D1
    fi

    git_aliases
); }

# Set git aliases
function git_aliases() { (
    gpg_key_usable && GPG_SIGN=" --gpg-sign"

    git config --global alias.aa 'add --all'
    git config --global alias.ac "commit${GPG_SIGN} --all --signoff --verbose"          # add and commit
    git config --global alias.aca "commit${GPG_SIGN} --all --amend --signoff --verbose" # add, amend and commit
    git config --global alias.ama 'am --abort'
    git config --global alias.amc 'am --continue'
    git config --global alias.ams "am${GPG_SIGN} --signoff" # am signoff
    git config --global alias.ap 'apply -3 -v'
    git config --global alias.b 'branch --verbose'
    git config --global alias.bd 'branch --delete --force'
    git config --global alias.bn 'rev-parse --abbrev-ref HEAD' # branch name
    git config --global alias.bm 'branch --move'
    git config --global alias.bu 'branch --unset-upstream'
    git config --global alias.c "commit${GPG_SIGN} --signoff --verbose"
    git config --global alias.ca "commit${GPG_SIGN} --amend --signoff --verbose"                           # commit ammend
    git config --global alias.cad "!git commit${GPG_SIGN} --amend --signoff --date=\"\$(date)\" --verbose" # commit amend date
    git config --global alias.cb 'rev-parse --abbrev-ref HEAD'                                             # current branch
    git config --global alias.cf 'diff --name-only --diff-filter=U'                                        # conflicts
    git config --global alias.ch 'checkout'
    git config --global alias.cl 'clean -fxd'
    git config --global alias.cp "cherry-pick${GPG_SIGN} --signoff"
    git config --global alias.cpa 'cherry-pick --abort'
    git config --global alias.cpc 'cherry-pick --continue'
    git config --global alias.cpe 'cherry-pick --edit --signoff'
    git config --global alias.cpq 'cherry-pick --quit'
    git config --global alias.cps 'cherry-pick --skip'
    git config --global alias.dc 'describe --contains'
    git config --global alias.dfs 'diff --stat'
    git config --global alias.dfss 'diff --shortstat'
    git config --global alias.dh 'diff HEAD'
    git config --global alias.dhc 'reset --hard HEAD^'
    git config --global alias.f 'fetch'
    git config --global alias.fa 'fetch --all'
    git config --global alias.fixes 'show -s --format="Fixes: %h (\"%s\")"'
    git config --global alias.fm "commit${GPG_SIGN} --file /tmp/mrg-msg" # finish merge
    git config --global alias.fp 'format-patch'
    git config --global alias.fpk 'format-patch --add-header="X-Patchwork-Bot: notify"'
    git config --global alias.kf 'show -s --format="%h (\"%s\")"'                             # kernel format
    git config --global alias.korg 'show -s --format="Link: https://git.kernel.org/linus/%H"' # link to a kernel.org commit for cherry-picks
    git config --global alias.lo 'log --oneline'
    git config --global alias.ma 'merge --abort'
    git config --global alias.mc 'merge --continue'
    # shellcheck disable=SC2016
    git config --global alias.mfc '!git log --format=%H --committer="$(git config --get user.name) <$(git config --get user.email)>" "$(git log --format=%H -n 150 | tail -n1)".. | tail -n1'
    git config --global alias.pr 'pull-request'
    git config --global alias.psu 'push --set-upstream'
    # shellcheck disable=SC2016
    git config --global alias.ra '!f() { for i in $(git cf); do git rf $i; done }; f' # reset all conflicts
    git config --global alias.rb "rebase${GPG_SIGN}"
    git config --global alias.rba 'rebase --abort'
    git config --global alias.rbc 'rebase --continue'
    git config --global alias.rbs 'rebase --skip'
    # shellcheck disable=SC2016
    git config --global alias.rf '!bash -c "git reset -- ${1} &>/dev/null && git checkout -q -- ${1}"' # reset file
    # shellcheck disable=SC2016
    git config --global alias.rfl '!bash -c "git reset -- ${1} && git checkout -- ${1}"' # reset file (loud)
    git config --global alias.rh 'reset --hard'
    git config --global alias.rma 'remote add'
    # https://lore.kernel.org/lkml/20190624144924.GE29120@arrakis.emea.arm.com/
    # shellcheck disable=SC2016
    git config --global alias.send-rmk-email '!git send-email --add-header=\"KernelVersion: $(git describe --abbrev=0)\" --no-thread --suppress-cc=all --to="patches@arm.linux.org.uk"'
    git config --global alias.rmsu 'remote set-url'
    git config --global alias.rmv 'remote -v'
    git config --global alias.rs 'reset --soft'
    git config --global alias.ru 'remote update'
    git config --global alias.rv "revert${GPG_SIGN} --signoff"
    git config --global alias.s 'status'
    git config --global alias.sh 'show --first-parent'
    git config --global alias.shf 'show --first-parent --format=fuller'
    git config --global alias.shm 'show --no-patch'
    git config --global alias.shmf 'show --format=fuller --no-patch'
    git config --global alias.ss 'status --short --branch'
    git config --global alias.us 'reset HEAD'

    # Set up merge aliases based on availability of '--signoff'
    [[ $(git --version | head -n 1 | cut -d . -f 2) -ge 15 ]] && SIGNOFF=" --signoff"
    git config --global alias.m "merge${GPG_SIGN}${SIGNOFF}"
    git config --global alias.ml "merge${GPG_SIGN}${SIGNOFF} --log=500"
    git config --global alias.pl "pull${GPG_SIGN}${SIGNOFF}"
    git config --global alias.pll "pull${GPG_SIGN}${SIGNOFF} --log=500"
); }
